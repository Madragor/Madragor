import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo
from aiogram.utils import executor

# üîπ –£–∫–∞–∂–∏ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "7789084657:AAGRAEoPXdi0a9Hh3tBvbEkfO6xP7TnsL9E"

# üîπ –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∏–Ω–∏–∞–ø–ø
WEB_APP_URL = "https://madragor13.vercel.app"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button = types.KeyboardButton("üöÄ –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏–∞–ø–ø", web_app=WebAppInfo(url=WEB_APP_URL))
    keyboard.add(button)

    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏–∞–ø–ø:", reply_markup=keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
